version: "3.7"

services:
  proxy:
    image: nginx:1.15.9-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - api_net
    depends_on:
      - the-book-pundit

  the-book-pundit:
    working_dir: /opt/app
    image: bahtou/the-book-pundit:latest
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=production
      - NODE_PORT=3000
      - APP_SERVICE=the-book-pundit
      - GOODREADS_API_SERVICE=api.thebookpundit.app
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=pundit
      - POSTGRES_PASSWORD=iheartbooks
      - POSTGRES_DB=thebookpundit
      - POSTGRES_POOLSIZE=10
      - POSTGRES_IDLETIMEOUTMILLIS=20000
      - POSTGRES_RETRY_MAX_TIME=900000
      - POSTGRES_RETRY_CONNECTION=5000
    networks:
      - api_net
      - db_net
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 2
        delay: 3s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      placement:
        constraints: [node.role == manager]
    depends_on:
      - postgres

  postgres:
    image: postgres:11.2-alpine
    environment:
      - POSTGRES_USER=pundit
      - POSTGRES_PASSWORD=iheartbooks
      - POSTGRES_DB=thebookpundit
    ports:
      - 5432:5432
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - type: volume
        source: pgData
        target: /var/lib/postgresql/data
    networks:
      - db_net
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      placement:
        constraints: [node.role == manager]

networks:
  api_net:
  db_net:

volumes:
  pgData:
